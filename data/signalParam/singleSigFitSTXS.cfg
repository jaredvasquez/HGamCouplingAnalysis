# Signal Parameterization For Spring 2017 HGam Coupling Analysis
# Jared Vasquez - jared.vasquez@yale.ed
# December 22, 2017

# The function to use ("DoubleCB" for doubles-sided Crystal Ball function, 
# "CBGA" for Crystal Ball + Gaussian function, "GAx3" for triple-Gaussian,
# "BifurGA" for bifurcated Gaussian), "Landau" for a Landau function, "Voigt"
# for a Voigtian, and "CBPlusVoigt" for Crystal Ball + Voigtian:
SignalFunctionalForm:		DoubleCB

# The directory containing the plots and fit workspace:
OutputDir: 			SigParam

# Name of the sample (e.g. "ggH", "VBF",... or "SM"). Doesn't affect running.
SampleName: 			Hyy

# The analysis luminosity, in pb-1, for normalization of the sample:
Luminosity:			36100

# Plot settings:
PlotFileFormat:			.png
ATLASLabel:			Simulation Internal
XAxisTitle:			m_{\gamma\gamma} [GeV]

# Cutflow index for overall event normalization (uses bin 3 if not specified):
#CutFlowIndexForNorm: 	        3

# Cutflow index for selection (uses last cutflow hist bin if not specified):
#CutFlowIndex: 	   	   	19

# Use the truth resonance mass specified instead of adding a branch below [MeV]:
ResonanceMass:			125000

# The name of the TTree or MxAOD object in which the events are stored:
TreeName:			CollectionTree

# TBranch information:
MassBranchName:		   	HGamEventInfoAuxDyn.m_yy
# Is the branch above in units of MeV or GeV?:
MassBranchUnits: 		  MeV
WeightBranchName: 		HGamEventInfoAuxDyn.weightCatCoup_Moriond2017
XSBREffBranchName: 		HGamEventInfoAuxDyn.crossSectionBRfilterEff
CutFlowBranchName: 		HGamEventInfoAuxDyn.cutFlow

# Use the settings below to use a branch to define categories. NOTE: categories
# MUST have an index that starts at zero. Otherwise, you will need to modify the
# macro to make sure that the category index fed to the SigParam tool starts at
# zero.
CategoryBranchName:		HGamEventInfoAuxDyn.catCoup_Moriond2017
CategoryNames:        GGH_0J_CEN GGH_0J_FWD GGH_1J_LOW GGH_1J_MED GGH_1J_HIGH GGH_1J_BSM GGH_2J_LOW GGH_2J_MED GGH_2J_HIGH GGH_2J_BSM VBF_HjjLO_loose VBF_HjjLO_tight VBF_HjjHI_loose VBF_HjjHI_tight VHhad_loose VHhad_tight QQH_BSM VHMET_LOW VHMET_MED VHMET_BSM VHlep_LOW VHlep_HIGH VHdilep_LOW VHdilep_HIGH ttHhad_6j2b ttHhad_6j1b ttHhad_5j2b ttHhad_5j1b tHhad_4j2b tHhad_4j1b ttHlep tHlep_1fwd tHlep_0fwd

# The binning for categories in the variable above (in matching units!):
#VariableForCategories: 		HGamEventInfoAuxDyn.pT_yy
#VariableBins: 			0.0 20000.0 30000.0 40000.0 50000.0 60000.0 80000.0 100000.0 200000.0
#CategoryNames: 			$p_{T}^{\gamma\gamma}<20$ $20<p_{T}^{\gamma\gamma}<30$ $30<p_{T}^{\gamma\gamma}<40$ $40<p_{T}^{\gamma\gamma}<50$ $50<p_{T}^{\gamma\gamma}<60$ $60<p_{T}^{\gamma\gamma}<80$ $80<p_{T}^{\gamma\gamma}<100$ $100<p_{T}^{\gamma\gamma}<200$

# An option to make the program run faster by making local copies of the input
# files, since processing MxAODs on EOS takes eons.
MakeLocalCopies: 	NO

# The input files 
InputFile:   /data/MxAODs/h015/mc15c/mc15c.PowhegPy8_NNLOPS_ggH125.MxAODDetailed.p3015.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.PowhegPy8_VBFH125.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.Pythia8_WH125.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.Pythia8_ZH125.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.aMCnloPy8_ttH125.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.aMCnloPy8_bbH125_yb2.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.aMCnloPy8_bbH125_ybyt.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.aMCnloHwpp_tWH125_yt_plus1.MxAODDetailed.p2908.h015.root
+InputFile:  /data/MxAODs/h015/mc15c/mc15c.MGPy8_tHjb125_yt_plus1.MxAODDetailed.p2908.h015.root

#CutFlowHistName:		<Name_of_the_cutflow>

# Print out a lot of information from the SigParam tool:
Verbose: 			NO


